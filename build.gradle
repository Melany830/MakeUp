buildscript {
    repositories {
        maven { url 'http://repo1.maven.org/maven2' }
        maven { url "http://dl.bintray.com/populov/maven" }
        maven { url "https://jcenter.bintray.com" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.1'
    }
}

allprojects {
    repositories {
        mavenCentral()
    }
}

apply plugin: 'com.android.application'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.android.support:support-v4:22.2.+'
    compile 'com.android.support:appcompat-v7:22.2.+'
    compile project(':commonlib2')
    compile project(':ecogallery2')
}

def gitSha1 = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}
//def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime() {
    return new Date().format("dd.MM.yyyy", TimeZone.getTimeZone('UTC'));;
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    signingConfigs {
        release {
            storeFile file(PROM_KEY_PATH)
            storePassword KEYSTORE_PASSWORD
            keyAlias PROM_KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
        debug {
            storeFile file("i:\\androidKey\\mysign1")
            storePassword "Fyfyfc"
            keyAlias "111"
            keyPassword "Fyfyfc"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            buildConfigField 'String', 'BUILD_TIME', '"' + buildTime() + '"'
        }
        debug {
            signingConfig signingConfigs.debug
            buildConfigField 'String', 'BUILD_TIME', 'null'
        }
    }

    sourceSets {
        main {
            manifest {
                srcFile 'AndroidManifest.xml'
            }
            java {
                srcDir 'src'
            }
            res {
                srcDir 'res'
            }
            assets {
                srcDir 'assets'
            }
            resources {
                srcDir 'src'
            }
            aidl {
                srcDir 'src'
            }
            jni {
                srcDirs = []
            }
            jniLibs {
                srcDirs 'libs'
            }
        }
    }

}